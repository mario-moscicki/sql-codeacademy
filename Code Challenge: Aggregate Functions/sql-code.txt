1. Use COUNT() and a LIKE operator to determine the number of users that have an email ending in ‘.com’.
      select count(email) from users
      where email like '%.com';
      
2. What are the most popular first names on Codeflix?
Use COUNT(), GROUP BY, and ORDER BY to create a list of first names and occurrences within the users table.
Order the data so that the most popular names are displayed first.
      
      SELECT first_name, COUNT(*) AS 'count'
      FROM users
      GROUP BY first_name
      ORDER BY 2 DESC;

3. The UX Research team wants to see a distribution of watch durations. They want the result to contain:
- duration, which is the watch event duration, rounded to the closest minute
- count, the number of watch events falling into this “bucket”

      select round(watch_duration_in_minutes) as 'suma w min.', count(watch_duration_in_minutes) as 'ilosc' 
      from watch_history
      group by 1;
      
4. Find all the users that have successfully made a payment to Codeflix and find their total amount paid.
Sort them by their total payments (from high to low).
Use SUM(), WHERE, GROUP BY, and ORDER BY.

      select user_id ,sum(amount) as 'suma'
      from payments
      where status ='paid'
      group by user_id
      order by 2 desc;

5. Generate a table of user ids and total watch duration for users who watched more than 400 minutes of content.
Use SUM(), GROUP BY, and HAVING to achieve this.

      select user_id, sum(watch_duration_in_minutes) 
      from watch_history
      group by user_id
      having sum(watch_duration_in_minutes) >= 400;

6. To the nearest minute, how many minutes of content were streamed on Codeflix?

      SELECT ROUND(SUM(watch_duration_in_minutes), 0) 
      FROM watch_history;

7. Which days in this period did Codeflix collect the most money?
Your result should have two columns, pay_date and total amount, sorted by the latter descending.
This should only include successful payments (status = 'paid').
Use SUM(), GROUP BY, and ORDER BY.

      select pay_date, sum(amount) 
      from payments
      where status = 'paid'
      group by pay_date
      ORDER BY 2 desc;


8. When users successfully pay Codeflix (status = 'paid'), what is the average payment amount?

      select avg(amount) as 'srednia platnosc'
      from payments
      where status = 'paid';

9. Of all the events in the watch_history table, what is the duration of the longest individual watch event? What is the duration of the shortest?
Use one query and rename the results to max and min.

      select max(watch_duration_in_minutes) as 'max', min(watch_duration_in_minutes ) as 'min' from watch_history;
